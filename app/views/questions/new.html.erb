<style>
	.input-group-addon {
		width: 0%;
	}
	
	.switch {
		position: relative;
		height: 26px;
		width: 120px;
		background: rgba(0, 0, 0, 0.25);
		border-radius: 3px;
		-webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);
		box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);
	}
	
	.switch-label {
		position: relative;
		z-index: 2;
		float: left;
		width: 58px;
		line-height: 26px;
		font-size: 11px;
		color: white;
		text-align: center;
		text-shadow: 0 1px 1px rgba(0, 0, 0, 0.45);
		cursor: pointer;
	}
	
	.switch-label:active {
		font-weight: bold;
	}
	
	.switch-label-off {
		padding-left: 2px;
	}
	
	.switch-label-on {
		padding-right: 2px;
	}
	/*
  Note: using adjacent or general sibling selectors 
  combined with pseudo classes doesn't work in Safari 
  5.0 and Chrome 12.
  See this article for more info and a potential fix: 
  http://css-tricks.com/webkit-sibling-bug/
*/
	
	.switch-input {
		display: none;
	}
	
	.switch-input:checked + .switch-label {
		font-weight: bold;
		color: rgba(0, 0, 0, 0.65);
		text-shadow: 0 1px rgba(255, 255, 255, 0.25);
		-webkit-transition: 0.15s ease-out;
		-moz-transition: 0.15s ease-out;
		-o-transition: 0.15s ease-out;
		transition: 0.15s ease-out;
	}
	
	.switch-input:checked + .switch-label-on ~ .switch-selection {
		/* Note: left: 50% doesn't transition in WebKit */
		left: 60px;
	}
	
	.switch-selection {
		display: block;
		position: absolute;
		z-index: 1;
		top: 2px;
		left: 2px;
		width: 58px;
		height: 22px;
		background: #65bd63;
		border-radius: 3px;
		background-image: -webkit-linear-gradient(top, #9dd993, #65bd63);
		background-image: -moz-linear-gradient(top, #9dd993, #65bd63);
		background-image: -o-linear-gradient(top, #9dd993, #65bd63);
		background-image: linear-gradient(to bottom, #9dd993, #65bd63);
		-webkit-box-shadow: inset 0 1px rgba(255, 255, 255, 0.5), 0 0 2px rgba(0, 0, 0, 0.2);
		box-shadow: inset 0 1px rgba(255, 255, 255, 0.5), 0 0 2px rgba(0, 0, 0, 0.2);
		-webkit-transition: left 0.15s ease-out;
		-moz-transition: left 0.15s ease-out;
		-o-transition: left 0.15s ease-out;
		transition: left 0.15s ease-out;
	}
</style>

<div class="">
	<div class="page-title">
		<div class="title_left">
			<h3>Add Questions</h3>
		</div>
		<div class="title_right">
			<div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">
				<div class="input-group">
					<input type="text" class="form-control" placeholder="Search for...">
					<span class="input-group-btn">
                    <button class="btn btn-default" type="button">Go!</button>
                  </span>
				</div>
			</div>
		</div>
	</div>
	<div class="clearfix"></div>
	<div class="row">
		<div class="col-md-12 col-sm-12 col-xs-12">
			<div class="x_panel">
				<div class="x_title">
					<h2>New Question <small> - please add a few questions &amp; options.</small></h2>
					<div class="clearfix"></div>
				</div					>
				<div class="x_content">
					<br />
					<div class="row">
						<div class="col-md-12">
							<div class="col-md-2" style="positon:relative;top:-8px">
								<h2>For creating Jigsaw-Tron</h2>
							</div>
							<div class="col-md-2">
								<div class="switch">
									<input type="radio" class="switch-input" name="view" value="week" id="week" checked>
									<label for="week" class="switch-label switch-label-off">Off</label>
									<input type="radio" class="switch-input" name="view" value="month" id="month">
									<label for="month" class="switch-label switch-label-on">On</label>
									<span class="switch-selection"></span>
								</div>
							</div>
						</div>
					</div>
					<form id="demo-form2" data-parsley-validate class="form-horizontal form-label-left">
						<div class="row">
							<div style="margin-top:3em" class="col-md-8 col-sm-8 col-xs-8">
								<div class="questionField">
									<br />
									<div id="Quiz1" class="questionsField well">
										<div id="questionText1" class="questionText">
											<h2>Question:</h2>
											<input type="text" id="Question1" class="form-control formtext" />
											<br />
											<div class="imgtog" style="display:none;">
											<h2>Image Url:</h2>
											<input type="text" id="imgurl1" class="form-control formtext1" />
											<br /><h2>Image description/Trivia:</h2>
											<input  type="text" id="imgdesc1" class="form-control formtext1" />
											<br />
											</div>
											<h2>Points:</h2>
											<input style="width:10%" type="number" id="pts1" class="form-control formtext" />
											<br />
											
										</div>
										<div id="Quiz1options">
											<div id="Quiz1Q1option1">
												<div class="row">
													<div class="col-md-10">
														<span class="optionText col-md-4 col-sm-4 col-xs-4"><h2>Option 1:</h2></span>
														<div class="col-md-8 col-sm-8 col-xs-8" style="padding: 0">
															<input style="width: 100%;" id="Q1O1" type="text" class="form-control formtext" />
														</div>
													</div>

													<div class="col-md-2">
														<div class="radio">
															<label>
																<input type="radio" name="optradio1" value="1">
															</label>
														</div>
													</div>
												</div>
											</div>

											<div id="Quiz1Q2option2">
												<div class="row">
													<div class="col-md-10">
														<span class="optionText col-md-4 col-sm-4 col-xs-4"><h2>Option 2:</h2></span>
														<div class="col-md-8 col-sm-8 col-xs-8" style="padding: 0">
															<input style="width: 100%;" id="Q1O2" type="text" class="form-control formtext" />
														</div>
													</div>
													<div class="col-md-2">
														<div class="radio">
															<label>
																<input type="radio" name="optradio1" value="2">
															</label>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
								<div style="position:fixed; right:0px; top: 30%;border:7px solid #34495e;padding:10px;background-color:#EDEDED;"  class="col-md-2 col-sm-4 col-xs-4">
									<div id="addO" class="addO btn btn-primary btn-block">
										<img src='../images/notification_add.png' width="50" height="50" /> <b style="font-size: 100%;">Add Option</b>
									</div>
									<div id="addQ" class="btn btn-primary btn-block">
										<img src='../images/file_add.png' width="50" height="50" /> <b style="font-size: 100%;">Add Question</b>
									</div>
									<br />
									<div id="sub" class="btn btn-block btn-success" style="font-size: large;">
										Submit
									</div>
								</div>
							</div>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>







<script>
	$(document).ready(function() {
		var quiz = 1;
		var questionCount = 1;
		var optionCount = 1;
		var optionNo = 2;
		var questionNo = 1;
		var toggleSelected;
		var i = 0;
		var Qoption = [];

		$('#addQ').click(function() {

			var optionSurr1 = $('#Quiz1Q1option1').clone();
			optionSurr1.find('#Q1O1').attr('id', 'Q' + (questionCount + 1) + 'O1');
			optionSurr1.find("input[name='optradio1']").attr('name', 'optradio' + (questionCount + 1));
			optionSurr1 = optionSurr1.html();

			var optionSurr2 = $('#Quiz1Q2option2').clone();
			optionSurr2.find('#Q1O2').attr('id', 'Q' + (questionCount + 1) + 'O2');
			optionSurr2.find("input[name='optradio1']").attr('name', 'optradio' + (questionCount + 1));
			optionSurr2 = optionSurr2.html();

			var questionSurr = $('#questionText' + questionCount).clone();
			questionSurr.find('#Question' + questionCount).attr('id', 'Question' + (questionCount + 1));
			questionSurr.find('#imgurl' + questionCount).attr('id', 'imgurl' + (questionCount + 1));
			questionSurr.find('#pts' + questionCount).attr('id', 'pts' + (questionCount + 1));
			questionSurr.find('#imgdesc' + questionCount).attr('id', 'imgdesc' + (questionCount + 1));
			
			var contSurr = '<div id="Quiz' + (questionCount + 1) + '" class="questionsField well"><a href="javascript:void(0);" class="removeQ"><span class="glyphicon glyphicon-trash pull-right"></span></a><div id="questionText' + (questionCount + 1) + '"">' + questionSurr.html() + '</div><div id="Quiz' + (questionCount + 1) + 'options">' + optionSurr1 + optionSurr2 + '</div>';
			$(contSurr).find('#Question' + (questionCount)).attr('id', 'Question');
			$('.questionField').append(contSurr)
			questionCount++;
			if(Qoption[questionCount] != undefined)
			{
				alert('yes');
				Qoption[questionCount] = 2;
			}

		});
		$(document).on('click', '.questionsField', function() {


			if (toggleSelected != null) {
				$('#' + toggleSelected).css('background-color', '#F5F5F5');
				$(this).css('background-color', '#34495e');
				toggleSelected = $(this).attr('id');
			}
			else {
				toggleSelected = $(this).attr('id');
				$(this).css('background-color', '#34495e');
			}

		});


		$('#addO').click(function() {
			var string = toggleSelected;
			var x = toggleSelected;
    		var pos = x.lastIndexOf("z");
    		var y = x.slice((x.lastIndexOf("z")+1),x.length);
   		    var index = parseInt(y);
			if (Qoption[index] === undefined) {
				Qoption[index] = 3;
			}
			else {
				Qoption[index]++;
			}
			var tobe = $('#Quiz1Q1option1').clone();
			tobe.find('.optionText').children(0).text('Option ' + Qoption[index] + ':');
			tobe.find('#Q1O1').attr('id', 'Q' + index + 'O' + Qoption[index]);
			tobe.find('#Q' + index + 'O' + Qoption[index]).parent().addClass('input-group');
			tobe.find('#Q' + index + 'O' + Qoption[index]).parent().append('<span class="del input-group-addon btn btn-danger" style="width: 40px; color: #fff;"><span class="glyphicon glyphicon-trash"></span></span>');
			tobe.find("input[name='optradio1']").attr('name', 'optradio' + index).val(Qoption[index]).addClass('flat');
			tobe = tobe.html();
			$('#Quiz' + index + 'options').append(tobe);
		});
		
		$(document).on('mouseover','.removeQ',function(){
			
			$(this).css('color','red');
		});
		$(document).on('mouseout','.removeQ',function(){
			
			$(this).css('color','grey');
		});
		
		$(document).on('click','.removeQ',function(){
			
			var parent = $(this).parent();
			var x = $(this).parent().attr('id');
			var pos = x.lastIndexOf("z");
    		var y = x.slice((x.lastIndexOf("z")+1),x.length);
   		    var quesId = parseInt(y);
			//quesId = parseInt(quesId.slice(-1));
			alert(quesId+" "+questionCount);
			if(quesId === questionCount)
			{
				alert('yes');
				$(this).parent().remove();
				questionCount--;
				Qoption[quesId] = 2;
			}
			else
			{
				var cont = parent.parent();
				for(var i=quesId+1;i<=questionCount;i++)
				{
					alert(i);
					cont.find('#Quiz'+i).attr('id','Quiz'+(i-1));
					cont.find('#questionText'+i).attr('id','questionText'+(i-1));
					cont.find('#pts'+i).attr('id','pts'+(i-1));
					cont.find('#imgurl'+i).attr('id','imgurl'+(i-1));
					cont.find('#imgdesc'+i).attr('id','imgdesc'+(i-1));
					cont.find('#Question'+i).attr('id','Question'+(i-1));
					cont.find('#Quiz'+i+'options').attr('id','Quiz'+(i-1)+'options');
					cont.find('input[name="optradio'+i+'"]').attr('name','optradio'+(i-1));
					if(Qoption[i] === undefined)
					{
						for(var j=1;j<3;j++)
						{
							cont.find('#Q'+i+'O'+j).attr('id','Q'+(i-1)+'O'+j);	
						}
						
						Qoption[i-1] = 2;
						
					}
					else
					{
						for(var j=1;j<=Qoption[i];j++)
						{
							cont.find('#Q'+i+'O'+j).attr('id','Q'+(i-1)+'O'+j);
						}
						
						Qoption[i-1] = Qoption[i];
					}
				}
					console.log(Qoption);
				$(this).parent().remove();
				questionCount--;
			}
			//$(this).parent().remove();
			//questionCount--;
			
		});

		$(document).on('click', '.del', function() {
			var string = toggleSelected;
			var x = $(this).closest('.questionsField').attr('id');
    		var pos = x.lastIndexOf("z");
    		var y = x.slice((x.lastIndexOf("z")+1),x.length);
   		    var index = parseInt(y);
			var string2 = $(this).parent().children(0).attr('id');
			var x = string2;
    		var pos = x.lastIndexOf("O");
    		var y = x.slice((x.lastIndexOf("O")+1),x.length);
    		var toremove = parseInt(y);
			//var toremove = string2.charAt(string2.length - 1);
			alert(toremove);
			var search = $(this).closest('#Quiz' + index + 'options');
			toremove = parseInt(toremove);
			if (toremove === 3) {
				console.log('yes');
				console.log(search);
				if (search.find('#Q' + index + 'O' + (toremove + 1)).length === 0) {
					console.log('no further');
				}
				else {
					var iterator = toremove + 1;
					while (search.find('#Q' + index + 'O' + iterator).length != 0) {
						search.find('#Q' + index + 'O' + iterator).parent().parent().find('.optionText').html('<h2>Option ' + (iterator - 1)+':</h2>');
						search.find('#Q' + index + 'O' + iterator).attr('id', 'Q' + index + 'O' + (iterator - 1));
						iterator++;
					}
				}
				console.log(search.find('#Q' + index + 'O' + (toremove + 1)));
			}
			else {
				if (search.find('#Q' + index + 'O' + (toremove + 1)).length === 0) {
					console.log(search.find('#Q1O2'));
					console.log(search.find('#Q' + index + 'O' + (toremove + 1)));
					console.log(index+" "+(toremove+1));
					console.log('no further1');
				}
				else {
					console.log(search);
					var iterator = toremove + 1;
					while (search.find('#Q' + index + 'O' + iterator).length != 0) {
						search.find('#Q' + index + 'O' + iterator).parent().parent().find('.optionText').html('<h2>Option ' + (iterator - 1)+':</h2>');
						search.find('#Q' + index + 'O' + iterator).attr('id', 'Q' + index + 'O' + (iterator - 1));
						iterator++;
						console.log(iterator);

					}
				}
			}
			$(this).closest('.row').remove();
			Qoption[index]--;
		});
		
		var toggleTextfieldColor = false;
		var allFieldFull = true;
		var questConstraint = true;
		var optionConstraint = true;
		var radioConstraint = true;
		var forjigsaw = false;
		$('.questionField, #addQ, .addO').click(function(){
			
		if(toggleTextfieldColor === true)
		{
			$('.formtext').each(function() {
				$(this).css({
						"border": "",
						"background": ""
					});
			});
		}
		
		});
		
		$('#sub').click(function() {
			
			var isValid = true;
			alert(questionCount);
			
			if($('#month').is(':checked')) { 
				
				forjigsaw = true;
				
			}
			
			$('.formtext').each(function() {
				if ($.trim($(this).val()) == '') {
					isValid = false;
					allFieldFull = false;
					toggleTextfieldColor = true;
					$(this).css({
						"border": "1px solid red",
						"background": "#FFCECE"
					});
				}
				else {
					$(this).css({
						"border": "",
						"background": ""
					});
				}
			
			});
			if(forjigsaw === true){
				$('.formtext1').each(function() {
						if ($.trim($(this).val()) == '') {
							isValid = false;
							allFieldFull = false;
							toggleTextfieldColor = true;
							$(this).css({
								"border": "1px solid red",
								"background": "#FFCECE"
							});
						}
						else {
							$(this).css({
								"border": "",
								"background": ""
							});
						
				
							
						}
					
							});
			}
			for (var i = 1; i < questionCount; i++) {
				if (Qoption[i] > 6) {
			  		isValid = false;
			  		optionConstraint = false;
					}
			}
			for(var i=0;i<questionCount;i++){
				
				
				if($("input[name='optradio"+(i+1)+"']:checked").val() === undefined )
				{
					alert('radio not clicked');
					radioConstraint = false;
					isValid = false;
				}
				
			}
			if(questionCount<2)
			{
			
				isValid = false;
				questConstraint = false;
			}
			if (isValid != false) {
				alert('true');
				var getUrlParameter = function getUrlParameter(sParam) {
					var sPageURL = decodeURIComponent(window.location.search.substring(1)),
						sURLVariables = sPageURL.split('&'),
						sParameterName,
						i;

					for (i = 0; i < sURLVariables.length; i++) {
						sParameterName = sURLVariables[i].split('=');

						if (sParameterName[0] === sParam) {
							return sParameterName[1] === undefined ? true : sParameterName[1];
						}
					}
				};

				var Qarray = [];
				var Oarray = [];
				var Carray = [];
				var Parray = [];
				var imgurl = [];
				var imgdesc = [];
				var quiz_id = getUrlParameter('id');
				for (var k = 0; k < questionCount; k++) {
					Qarray[k] = $('#Question' + (k + 1)).val();
				}

				for (var c = 0; c <= questionCount; c++) {
					Carray[c + 1] = $("input[name='optradio" + (c + 1) + "']:checked").val();
				}
				if(forjigsaw === true)
				{
					for (var q = 0; q <= questionCount; q++) {
						imgurl[q + 1] = $("#imgurl" + (q + 1)).val();
					}
					
					for (var q = 0; q <= questionCount; q++) {
						imgdesc[q + 1] = $("#imgdesc" + (q + 1)).val();
					}
					
				}
				for (var q = 0; q <= questionCount; q++) {
					Parray[q + 1] = $("#pts" + (q + 1)).val();
				}

				for (var i = 1; i <= questionCount; i++) {
					Oarray[i - 1] = new Array(10);

					if (Qoption[i] === undefined || Qoption[i] === 2) {
						for (var j = 1; j < 3; j++) {
							Oarray[i - 1][j - 1] = $('#Q' + i + 'O' + j).val();
						}
					}
					else {
						for (var j = 1; j <= Qoption[i]; j++) {
							Oarray[i - 1][j - 1] = $('#Q' + i + 'O' + j).val();

						}
					}
				}



				alert(getUrlParameter('id'));
				
				$.ajaxSetup({
  					headers: {
   						 'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
  						}
					});
				if(forjigsaw === true)
				{
					$.ajax({
					url: "/questions/show",
					type: "POST",
					data: {
						"quiz_id": quiz_id,
						"question": Qarray,
						"option": Oarray,
						"coption": Carray,
						"pts": Parray,
						"imgurl": imgurl,
						"imgdesc": imgdesc
					},
					success: function(data) {
						console.log(data + ' entered successfully');
						swal('Quiz added successfully');
						//window.location = '/quizzes';

						}

					});
				}
				else
				{
					$.ajax({
					url: "/questions/show",
					type: "POST",
					data: {
						"quiz_id": quiz_id,
						"question": Qarray,
						"option": Oarray,
						"coption": Carray,
						"pts": Parray
					},
					success: function(data) {
						console.log(data + ' entered successfully');
						swal('Quiz added successfully');
						//window.location = '/quizzes';

						}

					});
				}
				

			}

			else {
				if(allFieldFull === false && questConstraint === true && optionConstraint === true && radioConstraint === true)
				{
					console.log(questConstraint+" "+optionConstraint+" "+radioConstraint);
				swal("Oops...", "Please enter all the fields", "error");
				}
				
				else if (questConstraint === false) {
					swal("Oops...", "There must be a minimum of five questions", "error");
				}
				else if(optionConstraint === false)
				{
					swal("Oops...", "Options must be between a count of 2 and 6", "error");	
				}
				else if(radioConstraint === false)
				{
					swal("Oops...", "Make sure a radio button for every question is selected", "error")
				}
			}

		});
		
		
		$('.switch-input').click(function(){
			if($('#month').is(':checked')) { 
				
				$('.imgtog').css('display','block');
				
			}
			else
			{
				$('.imgtog').css('display','none');
			}
		});

	});
</script>

